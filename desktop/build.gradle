apply plugin: "java"

sourceCompatibility = 1.6
<<<<<<< HEAD
sourceSets.main.java.srcDirs = ["src/"]

project.ext.mainClassName = "io.developersguild.rebelinvader.desktop.DesktopLauncher"
=======
sourceSets.main.java.srcDirs = [ "src/" ]

project.ext.mainClassName = "com.developersguild.pewpew.desktop.DesktopLauncher"
>>>>>>> 765236f9b7ee08a1a8a5d218c70b207d9a77c18f
project.ext.assetsDir = new File("../android/assets");

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
<<<<<<< HEAD
    from { configurations.compile.collect { zipTree(it) } }
    from files(project.assetsDir);

=======
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);
 
>>>>>>> 765236f9b7ee08a1a8a5d218c70b207d9a77c18f
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes

eclipse {
    project {
        name = appName + "-desktop"
        linkedResource name: 'assets', type: '2', location: 'PARENT-1-PROJECT_LOC/android/assets'
    }
}

task afterEclipseImport(description: "Post processing after project generation", group: "IDE") {
<<<<<<< HEAD
    doLast {
        def classpath = new XmlParser().parse(file(".classpath"))
        new Node(classpath, "classpathentry", [kind: 'src', path: 'assets']);
        def writer = new FileWriter(file(".classpath"))
        def printer = new XmlNodePrinter(new PrintWriter(writer))
        printer.setPreserveWhitespace(true)
        printer.print(classpath)
    }
=======
  doLast {
    def classpath = new XmlParser().parse(file(".classpath"))
    new Node(classpath, "classpathentry", [ kind: 'src', path: 'assets' ]);
    def writer = new FileWriter(file(".classpath"))
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace(true)
    printer.print(classpath)
  }
>>>>>>> 765236f9b7ee08a1a8a5d218c70b207d9a77c18f
}